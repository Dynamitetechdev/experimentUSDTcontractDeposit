{
  "address": "0xFA822D175D088Ca300ac0A0d21800E13540157a5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destinationWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "Donate_InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "Donate_enterAFee",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "Donate_lowContractBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "Donate_notAccessToWithdraw",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "Donate_withdrawalNotSuccessFul",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountDonated",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "donator",
          "type": "address"
        }
      ],
      "name": "feeDonated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destinationWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getADonator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDonatorList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "participateInReward",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "permissionGranted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa4f245dfa2db4089e84ad8dd0feae0d5e0e23525ae2a9324e001e5dfabf861b6",
  "receipt": {
    "to": null,
    "from": "0x7474ca70dC32bC25267Fc7F473b9eeB10f85286a",
    "contractAddress": "0xFA822D175D088Ca300ac0A0d21800E13540157a5",
    "transactionIndex": 51,
    "gasUsed": "810414",
    "logsBloom": "0x
    "blockHash": "0x21bcde74fa7aeba72ab4d31b888cc99f709e7d23d933f6a73d9098df77ce88be",
    "transactionHash": "0xa4f245dfa2db4089e84ad8dd0feae0d5e0e23525ae2a9324e001e5dfabf861b6",
    "logs": [],
    "blockNumber": 6649656,
    "cumulativeGasUsed": "6686320",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1ce8c8E373993335D356d42bf4E210D3Ca9a0687"
  ],
  "numDeployments": 1,
  "solcInputHash": "33e04898346eb915a25d8f7c78e983df",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_destinationWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Donate_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Donate_enterAFee\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Donate_lowContractBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Donate_notAccessToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Donate_withdrawalNotSuccessFul\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountDonated\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"}],\"name\":\"feeDonated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destinationWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getADonator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDonatorList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"participateInReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permissionGranted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/donate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n//Pay and keep tract of donators\\n// a balance that keeps track of our balance\\n//only owner should be able to withdraw\\nerror Donate_enterAFee(string);\\nerror Donate_notAccessToWithdraw(string);\\nerror Donate_withdrawalNotSuccessFul(string);\\nerror Donate_lowContractBalance(string);\\nerror Donate_InsufficientBalance(string);\\n\\ncontract Donate is ReentrancyGuard {\\n\\n    address public destinationWallet;\\n    address[] private donatorList;\\n\\n    address private owner;\\n    uint private MINIMUM_VALUE = 1000;\\n    //mappings\\n    mapping(address => uint) public balanceOf;\\n     mapping(address => bool) public permissionGranted;\\n    //Events\\n    event feeDonated(uint indexed amountDonated, address indexed donator);\\n\\n    //modifiers\\n    modifier isOwner() {\\n        if (owner != msg.sender)\\n            revert Donate_notAccessToWithdraw(\\\"You are not the owner\\\");\\n        _;\\n    }\\n\\n    constructor(address _destinationWallet) {\\n        owner = msg.sender;\\n        destinationWallet = _destinationWallet;\\n    }\\n    function participateInReward() public payable {\\n        if (msg.value <= 0)\\n            revert Donate_enterAFee(\\\"Enter a value greater than zero\\\");\\n        balanceOf[msg.sender] = address(msg.sender).balance;\\n        if (balanceOf[msg.sender] <= 0)\\n            revert Donate_InsufficientBalance(\\\"Low Balance\\\");\\n        donatorList.push(msg.sender);\\n        emit feeDonated(msg.value, msg.sender);\\n    }\\n\\n    function withdrawFunds() public isOwner {\\n        uint balance = address(this).balance;\\n        if (balance <= 0) revert Donate_lowContractBalance(\\\"Low Balance\\\");\\n        (bool success, ) = payable(msg.sender).call{value: balance}(\\\"\\\");\\n        if (!success)\\n            revert Donate_withdrawalNotSuccessFul(\\n                \\\"your withdrawal was not successful. try again\\\"\\n            );\\n    }\\n\\n    function getADonator(uint index) public view returns (address) {\\n        return donatorList[index];\\n    }\\n\\n    function getDonatorList() public view returns (address[] memory) {\\n        return donatorList;\\n    }\\n    function getBalance() public view returns (uint) {\\n        return address(this).balance;\\n    }\\n    function getContractAddress() external view returns (address) {\\n        return address(this);\\n    }\\n    function getContractOwner() external view returns (address){\\n        return owner;\\n    }\\n    receive() external payable {\\n        participateInReward();\\n    }\\n\\n    fallback() external payable {\\n        participateInReward();\\n    }\\n}\\n\",\"keccak256\":\"0x739f6a4e9c2671237e940f3a8937412133c74c72f5ed9d2e116eba631ca4dd6d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526103e860045534801561001657600080fd5b50604051610d72380380610d728339818101604052810190610038919061012b565b600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610158565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f8826100cd565b9050919050565b610108816100ed565b811461011357600080fd5b50565b600081519050610125816100ff565b92915050565b600060208284031215610141576101406100c8565b5b600061014f84828501610116565b91505092915050565b610c0b806101676000396000f3fe6080604052600436106100955760003560e01c806353b7a59b1161005957806353b7a59b1461015057806370a082311461017b5780639390990d146101b85780639b6f83b3146101f5578063f63b846714610232576100a4565b806312065fe0146100ae57806324600fc3146100d957806332a2c5d0146100f0578063331e43e41461011b578063442890d514610125576100a4565b366100a4576100a261025d565b005b6100ac61025d565b005b3480156100ba57600080fd5b506100c3610426565b6040516100d09190610735565b60405180910390f35b3480156100e557600080fd5b506100ee61042e565b005b3480156100fc57600080fd5b506101056105b6565b6040516101129190610791565b60405180910390f35b61012361025d565b005b34801561013157600080fd5b5061013a6105be565b6040516101479190610791565b60405180910390f35b34801561015c57600080fd5b506101656105e8565b6040516101729190610791565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d91906107dd565b61060e565b6040516101af9190610735565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da9190610836565b610626565b6040516101ec9190610791565b60405180910390f35b34801561020157600080fd5b5061021c600480360381019061021791906107dd565b61066e565b604051610229919061087e565b60405180910390f35b34801561023e57600080fd5b5061024761068e565b6040516102549190610957565b60405180910390f35b600034116102a0576040517ff6683b5e000000000000000000000000000000000000000000000000000000008152600401610297906109d6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1631600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161037d576040517fd34cf16c00000000000000000000000000000000000000000000000000000000815260040161037490610a42565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16347f59995317374f6ca6fd87bf133a98995fc3d5c3e970d6d008b29b84dfbdcf5e8460405160405180910390a3565b600047905090565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104be576040517f31c1f32f0000000000000000000000000000000000000000000000000000000081526004016104b590610aae565b60405180910390fd5b600047905060008111610506576040517f95aaca890000000000000000000000000000000000000000000000000000000081526004016104fd90610a42565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161052c90610aff565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f14d5bcd80000000000000000000000000000000000000000000000000000000081526004016105a990610b86565b60405180910390fd5b5050565b600030905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60006002828154811061063c5761063b610ba6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60066020528060005260406000206000915054906101000a900460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561071257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c8575b5050505050905090565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077b82610750565b9050919050565b61078b81610770565b82525050565b60006020820190506107a66000830184610782565b92915050565b600080fd5b6107ba81610770565b81146107c557600080fd5b50565b6000813590506107d7816107b1565b92915050565b6000602082840312156107f3576107f26107ac565b5b6000610801848285016107c8565b91505092915050565b6108138161071c565b811461081e57600080fd5b50565b6000813590506108308161080a565b92915050565b60006020828403121561084c5761084b6107ac565b5b600061085a84828501610821565b91505092915050565b60008115159050919050565b61087881610863565b82525050565b6000602082019050610893600083018461086f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108ce81610770565b82525050565b60006108e083836108c5565b60208301905092915050565b6000602082019050919050565b600061090482610899565b61090e81856108a4565b9350610919836108b5565b8060005b8381101561094a57815161093188826108d4565b975061093c836108ec565b92505060018101905061091d565b5085935050505092915050565b6000602082019050818103600083015261097181846108f9565b905092915050565b600082825260208201905092915050565b7f456e74657220612076616c75652067726561746572207468616e207a65726f00600082015250565b60006109c0601f83610979565b91506109cb8261098a565b602082019050919050565b600060208201905081810360008301526109ef816109b3565b9050919050565b7f4c6f772042616c616e6365000000000000000000000000000000000000000000600082015250565b6000610a2c600b83610979565b9150610a37826109f6565b602082019050919050565b60006020820190508181036000830152610a5b81610a1f565b9050919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6000610a98601583610979565b9150610aa382610a62565b602082019050919050565b60006020820190508181036000830152610ac781610a8b565b9050919050565b600081905092915050565b50565b6000610ae9600083610ace565b9150610af482610ad9565b600082019050919050565b6000610b0a82610adc565b9150819050919050565b7f796f7572207769746864726177616c20776173206e6f7420737563636573736660008201527f756c2e2074727920616761696e00000000000000000000000000000000000000602082015250565b6000610b70602d83610979565b9150610b7b82610b14565b604082019050919050565b60006020820190508181036000830152610b9f81610b63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220cd14f590fcd05b8a0a9f6ebe1c4c0906ce80134423ae706f6bfee2d3aaa5d61d64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c806353b7a59b1161005957806353b7a59b1461015057806370a082311461017b5780639390990d146101b85780639b6f83b3146101f5578063f63b846714610232576100a4565b806312065fe0146100ae57806324600fc3146100d957806332a2c5d0146100f0578063331e43e41461011b578063442890d514610125576100a4565b366100a4576100a261025d565b005b6100ac61025d565b005b3480156100ba57600080fd5b506100c3610426565b6040516100d09190610735565b60405180910390f35b3480156100e557600080fd5b506100ee61042e565b005b3480156100fc57600080fd5b506101056105b6565b6040516101129190610791565b60405180910390f35b61012361025d565b005b34801561013157600080fd5b5061013a6105be565b6040516101479190610791565b60405180910390f35b34801561015c57600080fd5b506101656105e8565b6040516101729190610791565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d91906107dd565b61060e565b6040516101af9190610735565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da9190610836565b610626565b6040516101ec9190610791565b60405180910390f35b34801561020157600080fd5b5061021c600480360381019061021791906107dd565b61066e565b604051610229919061087e565b60405180910390f35b34801561023e57600080fd5b5061024761068e565b6040516102549190610957565b60405180910390f35b600034116102a0576040517ff6683b5e000000000000000000000000000000000000000000000000000000008152600401610297906109d6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1631600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161037d576040517fd34cf16c00000000000000000000000000000000000000000000000000000000815260040161037490610a42565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16347f59995317374f6ca6fd87bf133a98995fc3d5c3e970d6d008b29b84dfbdcf5e8460405160405180910390a3565b600047905090565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104be576040517f31c1f32f0000000000000000000000000000000000000000000000000000000081526004016104b590610aae565b60405180910390fd5b600047905060008111610506576040517f95aaca890000000000000000000000000000000000000000000000000000000081526004016104fd90610a42565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161052c90610aff565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f14d5bcd80000000000000000000000000000000000000000000000000000000081526004016105a990610b86565b60405180910390fd5b5050565b600030905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60006002828154811061063c5761063b610ba6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60066020528060005260406000206000915054906101000a900460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561071257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c8575b5050505050905090565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077b82610750565b9050919050565b61078b81610770565b82525050565b60006020820190506107a66000830184610782565b92915050565b600080fd5b6107ba81610770565b81146107c557600080fd5b50565b6000813590506107d7816107b1565b92915050565b6000602082840312156107f3576107f26107ac565b5b6000610801848285016107c8565b91505092915050565b6108138161071c565b811461081e57600080fd5b50565b6000813590506108308161080a565b92915050565b60006020828403121561084c5761084b6107ac565b5b600061085a84828501610821565b91505092915050565b60008115159050919050565b61087881610863565b82525050565b6000602082019050610893600083018461086f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108ce81610770565b82525050565b60006108e083836108c5565b60208301905092915050565b6000602082019050919050565b600061090482610899565b61090e81856108a4565b9350610919836108b5565b8060005b8381101561094a57815161093188826108d4565b975061093c836108ec565b92505060018101905061091d565b5085935050505092915050565b6000602082019050818103600083015261097181846108f9565b905092915050565b600082825260208201905092915050565b7f456e74657220612076616c75652067726561746572207468616e207a65726f00600082015250565b60006109c0601f83610979565b91506109cb8261098a565b602082019050919050565b600060208201905081810360008301526109ef816109b3565b9050919050565b7f4c6f772042616c616e6365000000000000000000000000000000000000000000600082015250565b6000610a2c600b83610979565b9150610a37826109f6565b602082019050919050565b60006020820190508181036000830152610a5b81610a1f565b9050919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6000610a98601583610979565b9150610aa382610a62565b602082019050919050565b60006020820190508181036000830152610ac781610a8b565b9050919050565b600081905092915050565b50565b6000610ae9600083610ace565b9150610af482610ad9565b600082019050919050565b6000610b0a82610adc565b9150819050919050565b7f796f7572207769746864726177616c20776173206e6f7420737563636573736660008201527f756c2e2074727920616761696e00000000000000000000000000000000000000602082015250565b6000610b70602d83610979565b9150610b7b82610b14565b604082019050919050565b60006020820190508181036000830152610b9f81610b63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220cd14f590fcd05b8a0a9f6ebe1c4c0906ce80134423ae706f6bfee2d3aaa5d61d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/donate.sol:Donate",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 80,
        "contract": "contracts/donate.sol:Donate",
        "label": "destinationWallet",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 83,
        "contract": "contracts/donate.sol:Donate",
        "label": "donatorList",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 85,
        "contract": "contracts/donate.sol:Donate",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 88,
        "contract": "contracts/donate.sol:Donate",
        "label": "MINIMUM_VALUE",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 92,
        "contract": "contracts/donate.sol:Donate",
        "label": "balanceOf",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 96,
        "contract": "contracts/donate.sol:Donate",
        "label": "permissionGranted",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}